public static LinkedListNode<Integer> append(LinkedListNode<Integer> root, int n) {

        LinkedListNode<Integer> slow = root;
        LinkedListNode<Integer> fast = root;
        
        for(int i=0;i<n;i++){
            fast = fast.next;
        }
        
        while(fast.next != null){
            fast = fast.next;
            slow = slow.next;
        }
        
        LinkedListNode<Integer> temp = slow.next;
        slow.next = null;
        fast.next = root;
        return temp;
    }


----------------------------------------------------------------


/*
class LinkedListNode<T> {
	public T data;
	public LinkedListNode<T> next;

	public LinkedListNode(T data) {
		this.setData(data);
		this.next = null;
	}

	public T getData() {
		return data;
	}

	public void setData(T data) {
		this.data = data;
	}

}
* */
public class Solution {
	public static LinkedListNode<Integer> append(LinkedListNode<Integer> root, int n) {
        
         LinkedListNode<Integer> temp = root;
        int count = 0;
        while(temp != null){
            count++;
            temp = temp.next;
        }
        
        int x = count - n;
       int i=1;
        temp = root;
        while(i < x){
            temp = temp.next;
            i++;
        }
        
        LinkedListNode<Integer> head2 = temp.next;
        
        temp.next = null;
        
        temp = head2;
        while(temp.next != null){
            temp = temp.next;
        }
        temp.next=root;
        return head2;
    }
}
