	public static LinkedListNode<Integer> sortEvenOdd(LinkedListNode<Integer> head) {
        if(head == null || head.next == null){
	    return head;
	}
        LinkedListNode<Integer> evenH = null;
        LinkedListNode<Integer> evenT = null;
        LinkedListNode<Integer> oddH = null;
        LinkedListNode<Integer> oddT = null;
        LinkedListNode<Integer> temp = head;
        
        
        while(temp != null){
            if(temp.data % 2 == 0){
                if(evenH == null && evenT == null){
                    evenH = temp;
                    evenT = temp;
                    temp = temp.next;
                }else{
                    evenT.next = temp;
                    evenT = evenT.next;
                    temp = temp.next;
                }
            }else{
                if(oddH == null && oddT == null){
                    oddH = temp;
                    oddT = temp;
                    temp = temp.next;
                }else{
                    oddT.next = temp;
                    oddT = oddT.next;
                    temp = temp.next;
                }
            }
        }
        
        if(oddH == null){
            evenT.next = null;
            return evenH;
        }else if(evenH == null){
            return oddH;
        }else{
            oddT.next = evenH;
            evenT.next = null;
            return oddH;
        }
    }
