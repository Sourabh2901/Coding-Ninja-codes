public class Solution {

	public static void inplaceHeapSort(int arr[]) {
        int i=1;
		for(i=1;i<arr.length;i++){
            int childIndex = i;
            int parentIndex = (childIndex - 1)/2;

            while(childIndex > 0){
                if(arr[parentIndex] > arr[childIndex]){
                    int temp = arr[parentIndex];
                    arr[parentIndex] = arr[childIndex];
                    arr[childIndex] = temp;
                    childIndex = parentIndex;
                    parentIndex = (childIndex - 1)/2;
                }
                else{
                    break;
                }
            }
        }

        int heapsize = arr.length;
        
        for(i = arr.length-1;i>0;i--){
            int temp1 = arr[0];
            arr[0] = arr[i];
            arr[i] = temp1;
            
            heapsize--;
            int index = 0;
            int minIndex = index;
            int leftChildIndex = 2*minIndex + 1;
            int rightChildIndex = 2*minIndex + 2;
            
            while(leftChildIndex < heapsize){
                if(arr[minIndex] > arr[leftChildIndex]){
                    minIndex = leftChildIndex;
                }
                if(rightChildIndex < heapsize && arr[minIndex] > arr[rightChildIndex]){
                    minIndex = rightChildIndex;
                }
                if(minIndex == index){
                    break;
                }else{
                    int temp2 = arr[minIndex];
                    arr[minIndex] = arr[index];
                    arr[index] = temp2;
                    index = minIndex;
                    leftChildIndex = 2*index + 1;
                    rightChildIndex = 2*index + 2;
                }

            }

 //           System.out.println("hello");
        }
		
	}
}
