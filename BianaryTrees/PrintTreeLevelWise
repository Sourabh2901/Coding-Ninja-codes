import java.util.Queue;
import java.util.LinkedList;

public class Solution {

/*	Binary Tree Node class
 * 
 * class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;
		
		public BinaryTreeNode(T data) {
			this.data = data;
		}
	}
	*/
	public static void printLevelWise(BinaryTreeNode<Integer> root) {
		/* Your class should be named Solution
		* Don't write main().
		* Don't read input, it is passed as function argument.
		* Print output and don't return it.
		* Taking input is handled automatically.
		*/
        
        Queue<BinaryTreeNode<Integer>> queue = new LinkedList<>();
        
        queue.add(root);
        
        while(queue.size() != 0){
            BinaryTreeNode<Integer> front = queue.remove();

                int x=0,y=0;
                if(front.left != null ){
                    queue.add(front.left);
                    x = front.left.data;
                }else{
                    x = -1;
                }
                
                if(front.right != null){
                    queue.add(front.right);
                    y = front.right.data;
                }else{
                    y = -1;
                }
                

              System.out.println(front.data+":L:"+x+",R:"+y);
             
    }

}
    
}    
