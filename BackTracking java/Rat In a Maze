public class Solution {

	public static boolean ratInAMaze(int maze[][]){
        int n = maze.length;
        boolean visited[][] = new boolean[n][n];
        
        return helper(maze ,visited ,0 ,0 ,n);
	}
    
    static int xdir[] = {-1,0,1,0};
    static int ydir[] = {0,1,0,-1};
    
    public static boolean helper(int maze[][] ,boolean visited[][] ,int x ,int y ,int n){
        visited[x][y] = true;
        
        if(x == n-1 && y == n-1){
            return true;
        }
        
        boolean ans = false;
        for(int i=0;i<4;i++){
            int x1 = x + xdir[i];
            int y1 = y + ydir[i];
            
            if(x1 >= 0 && x1 < n && y1 >= 0 && y1 < n){
                if(maze[x1][y1] == 1 && !visited[x1][y1]){
                    ans = helper(maze ,visited ,x1 ,y1 ,n);
                    if(ans){
                        return ans;
                    }
                }
            }      
        }
        return ans;
    }
}
