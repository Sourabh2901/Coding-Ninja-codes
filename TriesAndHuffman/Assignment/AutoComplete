import java.util.ArrayList;
class TrieNode{
	char data;
	boolean isTerminating;
	TrieNode children[];
	int childCount;

	public TrieNode(char data) {
		this.data = data;
		isTerminating = false;
		children = new TrieNode[26];
		childCount = 0;
	}
}

public class Trie {
	private TrieNode root;
	
	public Trie() {
		root = new TrieNode('\0');
	}

	private void add(TrieNode root, String word){
		if(word.length() == 0){
			root.isTerminating = true;
			return;
		}		
		int childIndex = word.charAt(0) - 'a';
		TrieNode child = root.children[childIndex];
		if(child == null){
			child = new TrieNode(word.charAt(0));
			root.children[childIndex] = child;
			root.childCount++;
		}
		add(child, word.substring(1));
	}

	public void add(String word){
		add(root, word);
	}
	
	// public void search(String word){
	// 	return search(root, word);
	// }

	private TrieNode findWord(TrieNode root, String word) {
		if(word.length() <= 0){
           // System.out.println(root.data);
            return root;
		}
        
		int childIndex = word.charAt(0) - 'a';
		TrieNode child = root.children[childIndex];
		if(child == null){
			return null;
		}
		return findWord(child, word.substring(1));
	}
    
    
	public void autoComplete(ArrayList<String> input, String word) {
		// Complete this function
		// Print the output as specified in question
		Trie myTrie = new Trie();
        for(int i = 0; i<input.size(); i++){
            String str = input.get(i);
                myTrie.add(str);
        }
        
        TrieNode ans = findWord(myTrie.root,word);
        
        if(ans != null){
            allPossibleWords(ans,word,""); 
        }   
	}
    
    public static void allPossibleWords(TrieNode root,String word,String output){
        if(root.isTerminating){
          //  System.out.println(output+"1");
            System.out.println(word+output);
        }
        
        for(int i=0;i<root.children.length;i++){
            if(root.children[i] != null){
                allPossibleWords(root.children[i],word,output+root.children[i].data);
            }
        }
        
    }
    
}
