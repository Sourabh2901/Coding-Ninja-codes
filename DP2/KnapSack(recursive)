public class Solution {
	
	public static int knapsack(int[] weight,int value[],int maxWeight, int n){
		return knapsack(weight ,value ,maxWeight ,n ,0);
	}
    
    private static int knapsack(int []weight ,int value[] ,int maxWeight ,int n,int i){
        if(i == n){
            return 0;
        }
        
        if(maxWeight == 0){
            return 0;
        }
        
        if(weight[i] > maxWeight){
            return knapsack(weight ,value ,maxWeight ,n ,i+1);
        }else{
            //not Including ith item
            int ans1 = knapsack(weight ,value ,maxWeight ,n ,i+1);
            
             //Including ith item
            int ans2 =value[i] + knapsack(weight ,value ,maxWeight - weight[i] ,n ,i+1);
            
            return Math.max(ans1,ans2);
        }       
    }
}
