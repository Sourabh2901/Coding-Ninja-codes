public class Solution {

    public static int knapsack(int[] weight,int value[],int maxWeight, int n){
       return helper(weight ,value, maxWeight ,n , 0);
    }

    public static int helper(int[] weight,int value[],int maxWeight, int n ,int i){
        if(i >= n){
            return 0;
        }
        
        if(maxWeight == 0){
            return 0;
        }

        if(weight[i] > maxWeight){
            return helper(weight ,value ,maxWeight ,n,i+1);
        }else{
            int op1 = value[i] + helper(weight ,value ,maxWeight - weight[i] ,n,i+1);
            int op2 = helper(weight ,value ,maxWeight ,n,i+1);
            
            return Math.max(op1,op2);
        }


    }
}
