
public class Solution {
	public static int editDistance(String s1, String s2){
        int storage[][] = new int [s1.length()+1][s2.length()+1];
        
        // for(int i=0;i<s1.length()+1;i++){
        //     for(int j=0;j<s2.length()+1;j++){
        //         storage[i][j] = -1;
        //     }
        // }
        return memoization(s1,s2,storage);
	}
    
    private static int memoization(String s1,String s2,int storage[][]){
        int m = s1.length();
        int n = s2.length();
        
        storage[0][0] = 0;
        
        for(int i=1;i<=m;i++){
            storage[i][0] = i;
        }
        
        for(int j=1;j<=n;j++){
            storage[0][j] = j;
        }

        for(int l=1;l<=m;l++){
            for(int k=1;k<=n;k++){
                if(s1.charAt(m-l) == s2.charAt(n-k)){
                    storage[l][k] = storage[l-1][k-1];
                }
                else{
                    // //insert
                    // int op1 = storage[]
                    // int op2 = editDistance(s1,s2.substring(1));
                    // int op3 = editDistance(s1.substring(1) , s2.substring(1));

                    storage[l][k] = 1 + Math.min(storage[l-1][k],Math.min(storage[l][k-1],storage[l-1][k-1]));
                }
            }
        }
        
        return storage[m][n];

    }
}
