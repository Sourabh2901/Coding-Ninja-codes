package Graphs;

import java.util.Scanner;

public class DFS {

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		System.out.println("Enter no of Vertices");
		int vertices = s.nextInt();
		System.out.println("Enter no of Edges");
		int edge = s.nextInt();
		int edges[][] = new int[vertices][vertices];
		
		for(int i=0;i<edge;i++){
			System.out.println("Enter sv ev of graph");
			int sv = s.nextInt();
			int ev = s.nextInt();
			edges[sv][ev] = 1;
			edges[ev][sv] = 1;
		}
		
		Dfs(edges);
	}

	private static void Dfs(int[][] edges) {
		boolean visited[] = new boolean[edges.length];
		
		for(int i=0;i<edges.length;i++){
			if(!visited[i]){
				dfshelper(edges,i,visited);
			}
		}
		
	}

	private static void dfshelper(int[][] edges, int sv, boolean[] visited) {
		System.out.println(sv);
		visited[sv] = true;
		
		for(int i=0;i<edges.length;i++){
			if(edges[sv][i] == 1 && !visited[i]){
				dfshelper(edges,i,visited);
			}
		}	
	}

}
