import java.util.Scanner;

public class Solution {

	public static void main(String[] args) {
		Scanner s = new Scanner(System.in);
		int V = s.nextInt();
		int E = s.nextInt();

		int edges[][] = new int[V][V];
        for(int i=0;i<E;i++){
            int sv = s.nextInt();
            int ev = s.nextInt();
            edges[sv][ev] = 1;
            edges[ev][sv] = 1;
        }
        
        int v1 = s.nextInt();
        int v2 = s.nextInt();
        
        System.out.println(hasPath(edges,v1,v2));
	}
    
    private static boolean hasPath(int edges[][],int v1,int v2){
        boolean visited[] = new boolean[edges.length];
        return hasPathhelper(edges,v1,v2,visited);
    }
    
    private static boolean hasPathhelper(int edges[][] ,int v1,int v2 ,boolean visited[]){
        if(edges[v1][v2] == 1){
            return true;
        }
        visited[v1] = true;
        
        for(int i=0;i<edges.length;i++){
            if(edges[v1][i] == 1 && !visited[i]){
                boolean ans = hasPathhelper(edges,i,v2,visited);
                if(ans)
                    return ans;
            }
        }
        return false;
    } 
}
